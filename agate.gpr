
project AGATE is
   type Arch_Kind is ("Cortex-M4", "RISCV32");

   Arch : Arch_Kind := external("Architecture", "Cortex-M4");

   for Languages use ("Ada", "Asm_Cpp");
   for Object_Dir use "obj";
   for Create_Missing_Dirs use "true";

   type Traces_Output_Kind is ("none", "arm_semihosting", "console");
   Traces_Output : Traces_Output_Kind := external("Traces_Output", "none");

   type Traces_Kind is ("none", "vcd");
   Traces : Traces_Kind := external("Traces", "none");

   type Enabled_Disabled is ("enabled", "disabled");

   Stack_Canaries : Enabled_Disabled := external("AGATE_Stack_Canaries",
                                                 "disabled");

   Timer   := "none";
   Traps   := "none";
   Console := "none";

   Src_Dir := ();

   case Arch is
      when "Cortex-M4" =>
         for Target use "arm-eabi";
         for Runtime ("Ada") use "zfp-cortex-m4f";
         Timer   := "systick";
         Traps   := "nvic";
         Console := "adatextio";
         Src_Dir := Src_Dir & ("src/armvx-m");
      when "RISCV32" =>
         for Runtime ("ada") use Project'Project_Dir & "/run-times/zfp-hifive1";
         for Target use "riscv32-unknown-elf";
         Timer   := "riscv32";
         Traps   := "riscv32";
         Console := "fe310";
         Src_Dir := Src_Dir & ("src/riscv32");
   end case;

   for Source_Dirs use ("src",
                        "src/api",
                        "src/traces",
                        "src/timers",
                        "src/console")
                        & Src_Dir;

   package Naming is

      for Body ("AGATE.Timer") use
        "agate-timer__" & Timer & ".adb";

      for Body ("AGATE.Traps") use
        "agate-traps__" & Traps & ".adb";

      for Body ("AGATE.Traces_Output") use
        "agate-traces_output__" & Traces_Output & ".adb";

      for Body ("AGATE.Traces") use
        "agate-traces__" & Traces & ".adb";

      for Spec ("AGATE_Types_Data.Traces") use
        "agate_types_data-traces__" & Traces & ".ads";

      for Body ("AGATE.Console") use
        "agate-console__" & Console & ".adb";

      for Spec ("AGATE.Stack_Canaries_Enable") use
        "agate-stack_canaries_enable__" & Stack_Canaries & ".ads";

   end Naming;

   type BUILD_TYPE is ("Debug", "Production");
   Build : BUILD_Type := external ("BUILD", "Debug");

   package Compiler is
      case Build is
         when "Production" =>
            for Default_Switches ("Ada") use
              ("-g", "-O3", "-gnatp", "-gnatn");
         when "Debug" =>
            for Default_Switches ("Ada") use
              ("-g", "-O0", "-gnata");
      end case;
      for Default_Switches ("ada") use Compiler'Default_Switches ("Ada") &
        ("-gnatwa", "-gnatwe", "-gnatQ", "-gnatw.X", "-gnaty", "-gnatyO",
         "-gnatwC", "-gnatyM80", "-ffunction-sections", "-fdata-sections");
   end Compiler;

end AGATE;
